load("KapuCGS.rr");
load("inconsistent.rr");

// Computing CGS: F with lex order

// F = [-112*c_1*c_4*s_7+16*c_1*c_4-112*c_1*c_7*s_4-136*c_1*s_4+44*2^(1/2)*c_1-x,
//     -112*c_4*s_1*s_7+16*c_4*s_1-112*c_7*s_1*s_4-136*s_1*s_4+44*2^(1/2)*s_1-y,
//     112*c_4*c_7+136*c_4-112*s_4*s_7+16*s_4+44*2^(1/2)+104-z,s_1^2+c_1^2-1,
//     s_4^2+c_4^2-1,s_7^2+c_7^2-1]$

// Approximating the square root of 2 as 1414/1000

F0 = -1000*x+((-112000*s_7+16000)*c_4-112000*s_4*c_7-136000*s_4+44000*(1414))*c_1$
F1 = -1000*y+(-112000*s_1*s_7+16000*s_1)*c_4-112000*s_1*s_4*c_7-136000*s_1*s_4+44000*(1414)*s_1$
F2 = -1000*z+(112000*c_7+136000)*c_4-112000*s_4*s_7+16000*s_4+44000*(1414)+104000$
F3 = s_1^2+c_1^2-1$
F4 = s_4^2+c_4^2-1$
F5 = s_7^2+c_7^2-1$

F = [F0, F1, F2, F3, F4, F5]$

// G = kcgs_main([-112*c_1*c_4*s_7+16*c_1*c_4-112*c_1*c_7*s_4-136*c_1*s_4+44*2^(1/2)*c_1-x,
// -112*c_4*s_1*s_7+16*c_4*s_1-112*c_7*s_1*s_4-136*s_1*s_4+44*2^(1/2)*s_1-y,
// 112*c_4*c_7+136*c_4-112*s_4*s_7+16*s_4+44*2^(1/2)+104-z,s_1^2+c_1^2-1,
// s_4^2+c_4^2-1,s_7^2+c_7^2-1],[x,y,z],[c_1,s_1,c_4,s_4,c_7,s_7],2)$

G = kcgs_main(F, [x,y,z], [c_1,s_1,c_4,s_4,c_7,s_7], 2)$

// bsave(G, "G.dat")$

end$
